=begin
#Power Cloud API

#IBM Power Cloud API for Power Hardware / Infrastructure

The version of the OpenAPI document: 2.3.1
Contact: ismirlia@us.ibm.com
Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudPower::PCloudVPNPoliciesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PCloudVPNPoliciesApi' do
  before do
    # run before each test
    @api_instance = IbmCloudPower::PCloudVPNPoliciesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PCloudVPNPoliciesApi' do
    it 'should create an instance of PCloudVPNPoliciesApi' do
      expect(@api_instance).to be_instance_of(IbmCloudPower::PCloudVPNPoliciesApi)
    end
  end

  # unit tests for pcloud_ikepolicies_delete
  # Delete IKE Policy
  # Delete an IKE Policy (by its unique identifier)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param ike_policy_id ID of a IKE Policy
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_ikepolicies_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ikepolicies_get
  # Get the specified IKE Policy
  # Get an IKE Policy (by its unique identifier)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param ike_policy_id ID of a IKE Policy
  # @param [Hash] opts the optional parameters
  # @return [IKEPolicy]
  describe 'pcloud_ikepolicies_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ikepolicies_getall
  # Get all IKE Policies
  # List all IKE Policies with all attributes
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param [Hash] opts the optional parameters
  # @return [IKEPolicies]
  describe 'pcloud_ikepolicies_getall test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ikepolicies_post
  # Add IKE Policy
  # Add a new IKE Policy
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the creation of a new IKE Policy
  # @param [Hash] opts the optional parameters
  # @return [IKEPolicy]
  describe 'pcloud_ikepolicies_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ikepolicies_put
  # Update IKE Policy
  # update an IKE Policy (by its unique identifier)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param ike_policy_id ID of a IKE Policy
  # @param body Parameters for updating IKE Policy
  # @param [Hash] opts the optional parameters
  # @return [IKEPolicy]
  describe 'pcloud_ikepolicies_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ipsecpolicies_delete
  # Delete IPSec Policy
  # Delete an IPSec Policy (by its unique identifier)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param ipsec_policy_id ID of a IPSec Policy
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_ipsecpolicies_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ipsecpolicies_get
  # Get the specified IPSec Policy
  # Get an IPSec Policy (by its unique identifier)
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param ipsec_policy_id ID of a IPSec Policy
  # @param [Hash] opts the optional parameters
  # @return [IPSecPolicy]
  describe 'pcloud_ipsecpolicies_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ipsecpolicies_getall
  # Get all IPSec Policies
  # Get all IPSec Policies with all their attributes
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param [Hash] opts the optional parameters
  # @return [IPSecPolicies]
  describe 'pcloud_ipsecpolicies_getall test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ipsecpolicies_post
  # Add IPSec Policy
  # Add a new IPSec Policy
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the creation of a new IPSec Policy
  # @param [Hash] opts the optional parameters
  # @return [IPSecPolicy]
  describe 'pcloud_ipsecpolicies_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_ipsecpolicies_put
  # Update IPSec Policy
  # update an IPSec Policy
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param ipsec_policy_id ID of a IPSec Policy
  # @param body Parameters for the update of an IPSec Policy
  # @param [Hash] opts the optional parameters
  # @return [IPSecPolicy]
  describe 'pcloud_ipsecpolicies_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
