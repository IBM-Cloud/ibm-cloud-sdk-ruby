=begin
#Power Cloud API

#IBM Power Cloud API for Power Hardware / Infrastructure

The version of the OpenAPI document: 2.3.1
Contact: ismirlia@us.ibm.com
Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'spec_helper'
require 'json'

# Unit tests for IbmCloudPower::PCloudVolumesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'PCloudVolumesApi' do
  before do
    # run before each test
    @api_instance = IbmCloudPower::PCloudVolumesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of PCloudVolumesApi' do
    it 'should create an instance of PCloudVolumesApi' do
      expect(@api_instance).to be_instance_of(IbmCloudPower::PCloudVolumesApi)
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_action_post
  # Perform an action on a Volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param body Parameters for the desired action
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_cloudinstances_volumes_action_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_delete
  # Delete a cloud instance volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_cloudinstances_volumes_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_flash_copy_mappings_get
  # Get a list of flashcopy mappings of a given volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Array<FlashCopyMapping>]
  describe 'pcloud_cloudinstances_volumes_flash_copy_mappings_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_get
  # Detailed info of a volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_cloudinstances_volumes_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_getall
  # List all volumes for this cloud instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param [Hash] opts the optional parameters
  # @option opts [Boolean] :replication_enabled true or false, limits a volumes list to replication or non replication enabled volumes
  # @option opts [String] :affinity A pvmInstance (id or name), limits a volumes list response to only volumes that have affinity to the pvmInstance
  # @option opts [Boolean] :auxiliary true or false, limits a volume list to auxiliary or non auxiliary volumes
  # @return [Volumes]
  describe 'pcloud_cloudinstances_volumes_getall test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_post
  # Create a new data Volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the creation of a new data volume
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_cloudinstances_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_put
  # Update a cloud instance volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param body Parameters to update a cloud instance volume
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_cloudinstances_volumes_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_cloudinstances_volumes_remote_copy_relationship_get
  # Get remote copy relationship of a volume
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [VolumeRemoteCopyRelationship]
  describe 'pcloud_cloudinstances_volumes_remote_copy_relationship_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_pvminstances_volumes_delete
  # Detach a volume from a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_pvminstances_volumes_get
  # Detailed info of a volume attached to a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Volume]
  describe 'pcloud_pvminstances_volumes_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_pvminstances_volumes_getall
  # List all volumes attached to a PVM Instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param [Hash] opts the optional parameters
  # @return [Volumes]
  describe 'pcloud_pvminstances_volumes_getall test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_pvminstances_volumes_post
  # Attach a volume to a PVMInstance
  # Attach a volume to a PVMInstance. &gt;**Note**: Recommended for attaching data volumes. In the case of VMRM, it is recommended to use the &#39;Attach all volumes to a PVM instance&#39; API for attaching the first boot volume.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_pvminstances_volumes_put
  # Update a volume attached to a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param body Parameters to update a volume attached to a PVMInstance
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_pvminstances_volumes_setboot_put
  # Set the PVMInstance volume as the boot volume
  # Set the PVMInstance volume as the boot volume. &gt;**Note**: If a non-bootable volume is provided, it will be converted to a bootable volume and then attached.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param volume_id Volume ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_pvminstances_volumes_setboot_put test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_pvminstances_volumes_delete
  # Detach multiple volumes from a PVMInstance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Parameter to detach multiple volumes from a PVMInstance
  # @param [Hash] opts the optional parameters
  # @return [VolumesDetachmentResponse]
  describe 'pcloud_v2_pvminstances_volumes_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_pvminstances_volumes_post
  # Attach all volumes to a PVMInstance
  # Attach all volumes to a PVMInstance. &gt;**Note**: In the case of VMRM, if a single volume ID is provided in the &#39;volumeIDs&#39; field, that volume will be converted to a bootable volume and then attached.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param pvm_instance_id PCloud PVM Instance ID
  # @param body Parameter to attach volumes to a PVMInstance
  # @param [Hash] opts the optional parameters
  # @return [VolumesAttachmentResponse]
  describe 'pcloud_v2_pvminstances_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumes_clone_post
  # Create a volume clone for specified volumes
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the cloning of volumes
  # @param [Hash] opts the optional parameters
  # @return [CloneTaskReference]
  describe 'pcloud_v2_volumes_clone_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumes_clonetasks_get
  # Get the status of a volumes clone request for the specified clone task ID
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param clone_task_id Volumes Clone Task ID
  # @param [Hash] opts the optional parameters
  # @return [CloneTaskStatus]
  describe 'pcloud_v2_volumes_clonetasks_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumes_delete
  # Delete all volumes
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters to delete volumes
  # @param [Hash] opts the optional parameters
  # @return [VolumesDeleteResponse]
  describe 'pcloud_v2_volumes_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumes_post
  # Create multiple data volumes from a single definition
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for creating multiple volumes
  # @param [Hash] opts the optional parameters
  # @return [Volumes]
  describe 'pcloud_v2_volumes_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_cancel_post
  # Cancel a volumes-clone request 
  # Initiates the cleanup action that performs the cleanup of the preparatory clones and snapshot volumes.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volumes_clone_id Volumes Clone ID
  # @param [Hash] opts the optional parameters
  # @option opts [VolumesCloneCancel] :body Parameters for cancelling a volumes-clone request
  # @return [VolumesClone]
  describe 'pcloud_v2_volumesclone_cancel_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_delete
  # Delete a volumes-clone request
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volumes_clone_id Volumes Clone ID
  # @param [Hash] opts the optional parameters
  # @return [Object]
  describe 'pcloud_v2_volumesclone_delete test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_execute_post
  # Initiate the Execute action for a volumes-clone request 
  # Execute action creates the cloned volumes using the volume snapshots.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volumes_clone_id Volumes Clone ID
  # @param body Parameters for the cloning of volumes
  # @param [Hash] opts the optional parameters
  # @return [VolumesClone]
  describe 'pcloud_v2_volumesclone_execute_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_get
  # Get the details for a volumes-clone request
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volumes_clone_id Volumes Clone ID
  # @param [Hash] opts the optional parameters
  # @return [VolumesCloneDetail]
  describe 'pcloud_v2_volumesclone_get test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_getall
  # Get the list of volumes-clone request for a cloud instance
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param [Hash] opts the optional parameters
  # @option opts [String] :filter volumes-clone filter to limit list items:   prepare - includes status values (preparing, prepared)   start   - includes status values (starting, available)   execute - includes status values (executing, available-rollback)   cancel  - includes status values (cancelling)   completed - includes status values (completed)   failed - includes status values (failed)   cancelled - includes status values (cancelled)   finalized - included status values (completed, failed, cancelled) 
  # @return [VolumesClones]
  describe 'pcloud_v2_volumesclone_getall test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_post
  # Create a new volumes clone request and initiates the Prepare action 
  # Requires a minimum of two volumes. Requires a minimum of one volume to be in the &#x60;in-use&#x60; state. Requires a unique volumes clone name. Prepare action does the preparatory work for creating the snapshot volumes. &gt;**Note**: If there is an existing prepare, user cannot trigger another prepare for the same set of volumes. Prepare should be followed by start and execute. If existing prepare does not have to be used then it should be first cancelled before the next prepare operation. 
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for preparing a set of volumes to be cloned
  # @param [Hash] opts the optional parameters
  # @return [VolumesClone]
  describe 'pcloud_v2_volumesclone_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_v2_volumesclone_start_post
  # Initiate the Start action for a volumes-clone request 
  # Start action starts the consistency group to initiate the flash copy.
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param volumes_clone_id Volumes Clone ID
  # @param [Hash] opts the optional parameters
  # @return [VolumesClone]
  describe 'pcloud_v2_volumesclone_start_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for pcloud_volumes_clone_post
  # Create a volume clone for specified volumes
  # This API is deprecated, use v2 clone API to perform the volume clone.  &gt;*Note*: Support for this API will be available till 31st March 2023. 
  # @param cloud_instance_id Cloud Instance ID of a PCloud Instance
  # @param body Parameters for the cloning of volumes
  # @param [Hash] opts the optional parameters
  # @return [VolumesCloneResponse]
  describe 'pcloud_volumes_clone_post test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
