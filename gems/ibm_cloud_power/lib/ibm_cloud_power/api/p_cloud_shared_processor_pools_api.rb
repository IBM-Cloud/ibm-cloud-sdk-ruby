=begin
#Power Cloud API

#IBM Power Cloud API for Power Hardware / Infrastructure

The version of the OpenAPI document: 2.3.1
Contact: ismirlia@us.ibm.com
Generated by: https://openapi-generator.tech
Generator version: 7.13.0

=end

require 'cgi'

module IbmCloudPower
  class PCloudSharedProcessorPoolsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Delete a Shared Processor Pool from a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param shared_processor_pool_id [String] Shared Processor Pool ID or Name
    # @param [Hash] opts the optional parameters
    # @return [Object]
    def pcloud_sharedprocessorpools_delete(cloud_instance_id, shared_processor_pool_id, opts = {})
      data, _status_code, _headers = pcloud_sharedprocessorpools_delete_with_http_info(cloud_instance_id, shared_processor_pool_id, opts)
      data
    end

    # Delete a Shared Processor Pool from a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param shared_processor_pool_id [String] Shared Processor Pool ID or Name
    # @param [Hash] opts the optional parameters
    # @return [Array<(Object, Integer, Hash)>] Object data, response status code and response headers
    def pcloud_sharedprocessorpools_delete_with_http_info(cloud_instance_id, shared_processor_pool_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_delete ...'
      end
      # verify the required parameter 'cloud_instance_id' is set
      if @api_client.config.client_side_validation && cloud_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'cloud_instance_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_delete"
      end
      # verify the required parameter 'shared_processor_pool_id' is set
      if @api_client.config.client_side_validation && shared_processor_pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'shared_processor_pool_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_delete"
      end
      # resource path
      local_var_path = '/pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools/{shared_processor_pool_id}'.sub('{' + 'cloud_instance_id' + '}', CGI.escape(cloud_instance_id.to_s)).sub('{' + 'shared_processor_pool_id' + '}', CGI.escape(shared_processor_pool_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'Object'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['OauthSecurity']

      new_options = opts.merge(
        :operation => :"PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_delete",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PCloudSharedProcessorPoolsApi#pcloud_sharedprocessorpools_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get the detail of a Shared Processor Pool for a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param shared_processor_pool_id [String] Shared Processor Pool ID or Name
    # @param [Hash] opts the optional parameters
    # @return [SharedProcessorPoolDetail]
    def pcloud_sharedprocessorpools_get(cloud_instance_id, shared_processor_pool_id, opts = {})
      data, _status_code, _headers = pcloud_sharedprocessorpools_get_with_http_info(cloud_instance_id, shared_processor_pool_id, opts)
      data
    end

    # Get the detail of a Shared Processor Pool for a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param shared_processor_pool_id [String] Shared Processor Pool ID or Name
    # @param [Hash] opts the optional parameters
    # @return [Array<(SharedProcessorPoolDetail, Integer, Hash)>] SharedProcessorPoolDetail data, response status code and response headers
    def pcloud_sharedprocessorpools_get_with_http_info(cloud_instance_id, shared_processor_pool_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_get ...'
      end
      # verify the required parameter 'cloud_instance_id' is set
      if @api_client.config.client_side_validation && cloud_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'cloud_instance_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_get"
      end
      # verify the required parameter 'shared_processor_pool_id' is set
      if @api_client.config.client_side_validation && shared_processor_pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'shared_processor_pool_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_get"
      end
      # resource path
      local_var_path = '/pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools/{shared_processor_pool_id}'.sub('{' + 'cloud_instance_id' + '}', CGI.escape(cloud_instance_id.to_s)).sub('{' + 'shared_processor_pool_id' + '}', CGI.escape(shared_processor_pool_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SharedProcessorPoolDetail'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['OauthSecurity']

      new_options = opts.merge(
        :operation => :"PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_get",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PCloudSharedProcessorPoolsApi#pcloud_sharedprocessorpools_get\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Get the list of Shared Processor Pools for a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param [Hash] opts the optional parameters
    # @return [SharedProcessorPools]
    def pcloud_sharedprocessorpools_getall(cloud_instance_id, opts = {})
      data, _status_code, _headers = pcloud_sharedprocessorpools_getall_with_http_info(cloud_instance_id, opts)
      data
    end

    # Get the list of Shared Processor Pools for a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param [Hash] opts the optional parameters
    # @return [Array<(SharedProcessorPools, Integer, Hash)>] SharedProcessorPools data, response status code and response headers
    def pcloud_sharedprocessorpools_getall_with_http_info(cloud_instance_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_getall ...'
      end
      # verify the required parameter 'cloud_instance_id' is set
      if @api_client.config.client_side_validation && cloud_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'cloud_instance_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_getall"
      end
      # resource path
      local_var_path = '/pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools'.sub('{' + 'cloud_instance_id' + '}', CGI.escape(cloud_instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'SharedProcessorPools'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['OauthSecurity']

      new_options = opts.merge(
        :operation => :"PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_getall",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PCloudSharedProcessorPoolsApi#pcloud_sharedprocessorpools_getall\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Create a new Shared Processor Pool
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param body [SharedProcessorPoolCreate] Parameters for the creation of a new Shared Processor Pool
    # @param [Hash] opts the optional parameters
    # @return [SharedProcessorPool]
    def pcloud_sharedprocessorpools_post(cloud_instance_id, body, opts = {})
      data, _status_code, _headers = pcloud_sharedprocessorpools_post_with_http_info(cloud_instance_id, body, opts)
      data
    end

    # Create a new Shared Processor Pool
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param body [SharedProcessorPoolCreate] Parameters for the creation of a new Shared Processor Pool
    # @param [Hash] opts the optional parameters
    # @return [Array<(SharedProcessorPool, Integer, Hash)>] SharedProcessorPool data, response status code and response headers
    def pcloud_sharedprocessorpools_post_with_http_info(cloud_instance_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_post ...'
      end
      # verify the required parameter 'cloud_instance_id' is set
      if @api_client.config.client_side_validation && cloud_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'cloud_instance_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_post"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_post"
      end
      # resource path
      local_var_path = '/pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools'.sub('{' + 'cloud_instance_id' + '}', CGI.escape(cloud_instance_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(body)

      # return_type
      return_type = opts[:debug_return_type] || 'SharedProcessorPool'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['OauthSecurity']

      new_options = opts.merge(
        :operation => :"PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_post",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PCloudSharedProcessorPoolsApi#pcloud_sharedprocessorpools_post\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Update a Shared Processor Pool for a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param shared_processor_pool_id [String] Shared Processor Pool ID or Name
    # @param body [SharedProcessorPoolUpdate] Parameters for the update of a Shared Processor Pool
    # @param [Hash] opts the optional parameters
    # @return [SharedProcessorPool]
    def pcloud_sharedprocessorpools_put(cloud_instance_id, shared_processor_pool_id, body, opts = {})
      data, _status_code, _headers = pcloud_sharedprocessorpools_put_with_http_info(cloud_instance_id, shared_processor_pool_id, body, opts)
      data
    end

    # Update a Shared Processor Pool for a cloud instance
    # @param cloud_instance_id [String] Cloud Instance ID of a PCloud Instance
    # @param shared_processor_pool_id [String] Shared Processor Pool ID or Name
    # @param body [SharedProcessorPoolUpdate] Parameters for the update of a Shared Processor Pool
    # @param [Hash] opts the optional parameters
    # @return [Array<(SharedProcessorPool, Integer, Hash)>] SharedProcessorPool data, response status code and response headers
    def pcloud_sharedprocessorpools_put_with_http_info(cloud_instance_id, shared_processor_pool_id, body, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_put ...'
      end
      # verify the required parameter 'cloud_instance_id' is set
      if @api_client.config.client_side_validation && cloud_instance_id.nil?
        fail ArgumentError, "Missing the required parameter 'cloud_instance_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_put"
      end
      # verify the required parameter 'shared_processor_pool_id' is set
      if @api_client.config.client_side_validation && shared_processor_pool_id.nil?
        fail ArgumentError, "Missing the required parameter 'shared_processor_pool_id' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_put"
      end
      # verify the required parameter 'body' is set
      if @api_client.config.client_side_validation && body.nil?
        fail ArgumentError, "Missing the required parameter 'body' when calling PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_put"
      end
      # resource path
      local_var_path = '/pcloud/v1/cloud-instances/{cloud_instance_id}/shared-processor-pools/{shared_processor_pool_id}'.sub('{' + 'cloud_instance_id' + '}', CGI.escape(cloud_instance_id.to_s)).sub('{' + 'shared_processor_pool_id' + '}', CGI.escape(shared_processor_pool_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json']) unless header_params['Accept']
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(body)

      # return_type
      return_type = opts[:debug_return_type] || 'SharedProcessorPool'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['OauthSecurity']

      new_options = opts.merge(
        :operation => :"PCloudSharedProcessorPoolsApi.pcloud_sharedprocessorpools_put",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: PCloudSharedProcessorPoolsApi#pcloud_sharedprocessorpools_put\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
